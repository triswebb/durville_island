foo <- ggmap(map)+
scale_x_continuous(limits = c(170.33, 175.36), expand = c(0, 0)) +
scale_y_continuous(limits = c(-40.49, -44.5), expand = c(0, 0))
foo
map <- get_map(location = c(lon = -40.49, lat = 175.36), zoom = 14,
maptype = "satellite", source = "google")
### Get a map
map <- get_map(location = c(lon = 175.36, lat = -40.49), zoom = 14,
maptype = "satellite", source = "google")
ggmap(map)
map <- get_map(location = c(lon = 175.36, lat = -40.49), zoom = 5,
maptype = "satellite", source = "google")
require(mapproj)
### Get a map
map <- get_map(location = c(lon = 175.36, lat = -40.49), zoom = 5,
maptype = "satellite", source = "google")
ggmap(map)
map <- get_map(location = c(lon = 173.7, lat = -40.8), zoom = 6,
maptype = "satellite", source = "google")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.7, lat = -40.8), zoom = 8,
maptype = "satellite", source = "google")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.7, lat = -40.8), zoom = 12,
maptype = "satellite", source = "google")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.7, lat = -40.8), zoom = 10,
maptype = "satellite", source = "google")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 10,
maptype = "satellite", source = "google")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 10,
maptype = "terrain")
ggmap(map)
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain")
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain", source ="stamen")
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain-background", source ="stamen")
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain-background", source ="stamen", format="png8")
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain-background", source ="stamen", format=png8")
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain-background", source ="stamen", format=png8)
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain-background", source ="stamen", format=png8)
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "toner", source ="stamen")
ggmap(map)
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrian", source ="stamen")
### Get a map
map <- get_map(location = c(lon = 173.816, lat = -40.8502), zoom = 11,
maptype = "terrain", source ="stamen")
ggmap(map) + theme_bw()
nz = map_data("nz")
nz
ggplot() + geom_polygon(data = nz, aes(x=long, y = lat, group = group)) +
coord_fixed(1.3)
ggplot() + geom_polygon(data = nz, aes(x=173.816, y = -40.8502, group = group)) +
coord_fixed(1.3)
ggplot() + geom_polygon(data = nz, aes(x=173.816, y = -40.8502)) +
coord_fixed(1.3)
ggplot() + geom_polygon(data = nz, aes(x=173.816, y = -40.8502))
install.packages("roja")
install.packages("rioja")
library("rioja", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data(aber)
depth <- aber$ages$Age
spec <- aber$spec
# basic silhouette plot
strat.plot(spec, yvar = depth, y.rev=TRUE, scale.percent=TRUE, ylabel="Depth (cm)",
plot.poly=TRUE, col.poly="darkgreen", col.poly.line=NA)
# now with horizontal lines at sample positions
strat.plot(spec, yvar = depth, y.rev=TRUE, scale.percent=TRUE, ylabel="Depth (cm)",
plot.poly=TRUE, col.poly="darkgreen", plot.bar="Full", col.poly.line=NA)
head(aber)
library("vegan", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
cite vegan
citation("vegan"
)
library("rioja", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
citation("rioja")
install.packages("bchon")
install.packages("clam")
install.packages("crandatapkgs")
bchon
install.packages("Bacon")
setRepositories()
install.packages("bchon")
install.packages("~/Downloads/Bchron_4.2.6.tar.gz", repos = NULL, type = "source")
install.packages("ellipse")
library("ellipse", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("~/Downloads/Bchron_4.2.6.tar.gz", repos = NULL, type = "source")
install.packages("coda")
library("coda", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("mclust")
install.packages("inline")
install.packages("~/Downloads/Bchron_4.2.6.tar.gz", repos = NULL, type = "source")
library("Bchron", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ages1 = BchronCalibrate(ages=11553,ageSds=230,calCurves='intcal13',ids='Date-1')
summary(ages1)
plot(ages1)
ages2 = BchronCalibrate(ages=c(3445,11553,7456),ageSds=c(50,230,110),
calCurves=c('intcal13','intcal13','shcal13'))
plot(ages2)
data(Glendalough)
# Run in Bchronology - all but first age uses intcal13
GlenOut = Bchronology(ages=Glendalough$ages,ageSds=Glendalough$ageSds,
calCurves=Glendalough$calCurves,positions=Glendalough$position,
positionThicknesses=Glendalough$thickness,ids=Glendalough$id,
predictPositions=seq(0,1500,by=10))
plot(GlenOut,main="Glendalough",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1)
install.packages("googlesheets")
library("googlesheets", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
gs_ls
gs_ls()
library(googlesheets)
library(dplyr)
(my_sheets <- gs_ls())
suppressMessages(library(dplyr))
(my_sheets <- gs_ls())
(my_sheets <- gs_ls())
(my_sheets <- gs_ls())
gap <- gs_title("durville-age-depth")
gap
gs_ws_ls(gap)
gs_ws_ls(gap)
gs_ws_ls(gap)
age-depth <- gs_read(ws = "durville-age-depth")
age-depth <- gap %>% gs_read(ws = "durville-age-depth")
age-depth <- gap %>% gs_read(ws = "Sheet 1")
age-depth <- gap %>% gs_read(ws = "Sheet1")
age-deptg
age-depth
oceania <- gap %>%
gs_read(ws = "Sheet1")
oceania
age-depth <- gap %>%
gs_read(ws = "Sheet1")
age_depth <- gap %>%
gs_read(ws = "Sheet1")
age_depth
agelist = split(age_depth, age_depth$location)
agelist
agelist$moawhitu$ageSds
agelist$moawhitu$ageSds[1]
moawhitu = GlenOut = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds,
calCurves=agelist$moawhitu$calCurves,positions=agelist$moawhitu$position,
positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$$id,
predictPositions=seq(0,1500,by=10))
moawhitu = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds,
calCurves=agelist$moawhitu$calCurves,positions=agelist$moawhitu$position,
positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$id,
predictPositions=seq(0,1500,by=10))
age_depth
moawhitu = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds,
calCurves=agelist$moawhitu$calcurves,positions=agelist$moawhitu$position,
positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$id,
predictPositions=seq(0,1500,by=10))
plot(moawhitu)
moawhitu = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds,
calCurves=agelist$moawhitu$calcurves,positions=agelist$moawhitu$position,
positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$id,
predictPositions=seq(0,70,by=10))
plot(moawhitu)
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0)
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=range(60:0))
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=range(0:60))
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=range(0:60))
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0)
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(60,0))
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(70,0))
agelist$moawhitu$position
agelist$moawhitu$position[3]
agelist$moawhitu$position[4]
plot(moawhitu,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(agelist$moawhitu$position[4]+5,0))
build_age_model(agelist)
build_age_model <- function(site_location){
for(location in site_location)
print(location)
}
build_age_model(agelist)
build_age_model(agelist)
build_age_model <- function(site_location){
for(location in site_location)
site = location$location
print(site)
}
build_age_model(agelist)
build_age_model <- function(site_location){
for(location in site_location){
site = location$location
print(site)
}
}
build_age_model(agelist)
build_age_model <- function(site_location){
for(location in site_location){
site = location$location
age_model = Bchronology(ages=site$ages,ageSds=site$ageSds,
calCurves=site$calcurves,positions=site$position,
positionThicknesses=site$thickness,ids=site$Id,
predictPositions=seq(0,70,by=10))
plot_model(age_model)
}
}
plot_model <- function(to_plot) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(agelist$moawhitu$position[4]+5,0))
}
build_age_model(agelist)
par(mfrow = c(1, 3))
build_age_model <- function(site_location){
for(location in site_location){
site = location$location
age_model = Bchronology(ages=site$ages,ageSds=site$ageSds,
calCurves=site$calcurves,positions=site$position,
positionThicknesses=site$thickness,ids=site$Id,
predictPositions=seq(0,70,by=10))
plot_model(age_model)
}
}
plot_model <- function(to_plot) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(agelist$moawhitu$position[4]+5,0))
}
build_age_model(agelist)
site = locations$location
build_age_model <- function(site_location){
for(locations in site_location){
site = locations$location
age_model = Bchronology(ages=site$ages,ageSds=site$ageSds,
calCurves=site$calcurves,positions=site$position,
positionThicknesses=site$thickness,ids=site$Id,
predictPositions=seq(0,70,by=10))
plot_model(age_model)
}
}
par(mfrow = c(1, 3))
build_age_model(agelist)
build_age_model <- function(site_location){
for(locations in site_location){
site = locations$location
}
}
build_age_model <- function(site_location){
for(locations in site_location){
site = locations$location
print(site)
}
}
build_age_model(agelist)
build_age_model <- function(site_location){
for(locations in site_location){
site = locations$location
print(locations$ages)
}
}
build_age_model(agelist)
build_age_model <- function(site_location){
for(locations in site_location){
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,70,by=10))
plot_model(age_model)
}
}
par(mfrow = c(1, 3))
build_age_model(agelist)
agelist
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(agelist$moawhitu$position[4]+5,0), legend.plot = FALSE)
plot(age_model,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(agelist$moawhitu$position[4]+5,0), legend.plot = FALSE)
plot_model <- function(to_plot) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(agelist$moawhitu$position[4]+5,0), legend.plot = FALSE)
}
build_age_model <- function(site_location){
for(locations in site_location){
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4],by=10))
plot_model(age_model)
}
}
gap <- gs_title("durville-age-depth")
age_depth <- gap %>%
gs_read(ws = "Sheet1")
age_depth <- gap %>%
gs_read(ws = "depths")
agelist = split(age_depth, age_depth$location)
par(mfrow = c(1, 3))
build_age_model(agelist)
plot_model <- function(to_plot, limit_y) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(limit_y+5,0), legend.plot = FALSE)
}
plot_model <- function(to_plot, limit_y) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(limit_y+5,0), legend.plot = FALSE)
}
plot_model <- function(to_plot, limit_y) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(limit_y+5,0), legend.plot = FALSE)
}
build_age_model <- function(site_location){
for(locations in site_location){
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4],by=10))
plot_model(age_model, locations$position[4])
}
}
par(mfrow = c(1, 3))
build_age_model(agelist)
warnings()
build_age_model <- function(site_location){
for(locations in site_location){
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4]+50,by=10))
plot_model(age_model, locations$position[4])
}
}
plot_model <- function(to_plot, limit_y) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, ylim=c(limit_y+5,0), legend = FALSE)
}
par(mfrow = c(1, 3))
build_age_model(agelist)
par(mfrow = c(3, 1))
build_age_model(agelist)
Msc = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds, calCurves=agelist$moawhitu$calCurves,positions=agelist$moawhitu$position, positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$Id, predictPositions=seq(0,70,by=10))
Msc = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds, calCurves=agelist$moawhitu$calCurves,positions=agelist$moawhitu$position, positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$Id, predictPositions=seq(0,70,by=10))
Msc = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds, calCurves=agelist$moawhitu$calcurves,positions=agelist$moawhitu$position, positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$Id, predictPositions=seq(0,70,by=10))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0)
par(mfrow = c(1, 1))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0)
Msc = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds, calCurves=agelist$moawhitu$calcurves,positions=agelist$moawhitu$position, positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$Id, predictPositions=seq(0,70,by=100))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0)
Msc = Bchronology(ages=agelist$moawhitu$ages,ageSds=agelist$moawhitu$ageSds, calCurves=agelist$moawhitu$calcurves,positions=agelist$moawhitu$position, positionThicknesses=agelist$moawhitu$thickness,ids=agelist$moawhitu$Id, predictPositions=seq(0,70,by=5))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0)
install.packages("Bacon")
Bchronology
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=10)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5, legLoc=FALSE)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5, leg=FALSE)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5, legLoc = none)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5, legend=none)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5, legend=FALSE)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=5, legLoc = "bottomright")
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=2, legLoc = "bottomright")
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=0, dateHeight=3, legLoc = "bottomright")
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legLoc = "bottomright")
plot_model <- function(to_plot, limit_y) {
plot(to_plot,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legLoc = "bottomright")
}
build_age_model <- function(site_location){
for(locations in site_location){
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4]+50,by=10))
plot_model(age_model, locations$position[4])
}
}
par(mfrow = c(1, 3))
build_age_model(agelist)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legend(legend=FALSE))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legend(x=0,legend=FALSE))
par(mfrow = c(1, 3))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legend(0,y=NULL, legend = FALSE))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legend=FALSE)
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab='Depth (cm)',las=1, dateHeight=3, legLoc = c(1000,1000))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab=ifelse((site="moawhitu"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
build_age_model <- function(site_location){
for(locations in site_location){
site = locations$location
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4]+25,by=10))
plot_model(age_model, site)
}
}
plot_model <- function(site_to_plot, site) {
plot(site_to_plot,main=site,xlab=ifelse((site="moawhitu"),"Age (cal years BP)",""),ylab=ifelse((site="ohana"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
}
par(mfrow = c(1, 3))
build_age_model(agelist)
gap <- gs_title("durville-age-depth")
age_depth <- gap %>%
gs_read(ws = "depths")
agelist = split(age_depth, age_depth$location)
gap <- gs_title("durville-age-depth")
age_depth <- gap %>%
gs_read(ws = "depths")
agelist = split(age_depth, age_depth$location)
build_age_model <- function(site_location){
for(locations in site_location){
site = locations$location[1]
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4]+25,by=10))
plot_model(age_model, site)
}
}
plot_model <- function(site_to_plot, site) {
plot(site_to_plot,main=site,xlab=ifelse((site="moawhitu"),"Age (cal years BP)",""),ylab=ifelse((site="ohana"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
}
plot_model <- function(site_to_plot, site) {
plot(site_to_plot,main=site,xlab=ifelse((site="Moawhitu"),"Age (cal years BP)",""),ylab=ifelse((site="Ohana"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
}
par(mfrow = c(1, 3))
build_age_model(agelist)
plot_model <- function(site_to_plot, site) {
plot(site_to_plot,main=site,xlab=ifelse((site=="Moawhitu"),"Age (cal years BP)",""),ylab=ifelse((site=="Ohana"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
}
par(mfrow = c(1, 3))
build_age_model(agelist)
par(mfrow = c(1, 3))
build_age_model(agelist)
build_age_model <- function(site_location){
#iterate through each site and create age depth model
for(locations in site_location){
site = locations$location[1]
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4]+25,by=10))
#plot age depth model and send site name for title
plot_model(age_model, site)
}
}
plot_model <- function(site_to_plot, site) {
#plot model - ifelse statements for clean plot axis
plot(site_to_plot,main=site,xlab=ifelse((site=="Ohana"),"Age (cal years BP)",""),ylab=ifelse((site=="Moawhitu"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
}
par(mfrow = c(1, 3))
build_age_model(agelist)
setwd("~/Desktop/Publications/figs/age-depth-models")
par(mfrow = c(1, 3))
dpi=600    #pixels per square inch
tiff("age-depth-model-all-sites.tif", width=645, height=418, res=dpi)
build_age_model(agelist)
build_age_model <- function(site_location){
#iterate through each site and create age depth model
for(locations in site_location){
site = locations$location[1]
age_model = Bchronology(ages=locations$ages,ageSds=locations$ageSds,
calCurves=locations$calcurves,positions=locations$position,
positionThicknesses=locations$thickness,ids=locations$Id,
predictPositions=seq(0,locations$position[4]+25,by=10))
#plot age depth model and send site name for title
plot_model(age_model, site)
}
}
plot_model <- function(site_to_plot, site) {
#plot model - ifelse statements for clean plot axis
plot(site_to_plot,main=site,xlab=ifelse((site=="Ohana"),"Age (cal years BP)",""),ylab=ifelse((site=="Moawhitu"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
}
dev.off()
par(mfrow = c(1, 3))
dpi=600    #pixels per square inch
tiff("age-depth-model-all-sites.tif", width=645, height=418, res=dpi)
build_age_model(agelist)
par(mfrow = c(1, 3))
dpi=600    #pixels per square inch
tiff("age-depth-model-all-sites.tif", res=dpi)
build_age_model(agelist)
dev.off()
dev.off()
par(mfrow = c(1, 3))
dpi=600    #pixels per square inch
tiff("age-depth-model-all-sites.tif", res=dpi)
build_age_model(agelist)
par('mar')
par(mfrow = c(1, 3))
par(mar=c(5,5,5,5))
dpi=600    #pixels per square inch
tiff("age-depth-model-all-sites.tif", res=dpi)
build_age_model(agelist)
par(mfrow = c(1, 3))
par(mar=c(1,1,1,1))
dpi=600    #pixels per square inch
tiff("age-depth-model-all-sites.tif", res=dpi)
build_age_model(agelist)
dev.off()
dev.off()
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab=ifelse((site="moawhitu"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
plot(Msc,main="Durville",xlab='Age (cal years BP)',ylab=ifelse((site="moawhitu"),'Depth below sediment surface (cm)',""),las=1, dateHeight=3, legLoc = c(1000,1000))
plot(cars)
